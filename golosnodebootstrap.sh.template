#!/bin/bash

set -e
set -x

# Only works under root
if [[ $EUID -ne 0 ]]; then
	echo "ERROR: This script must be run as root"
	exit 1
fi

# Only works on Ubuntu
OS=`cat /etc/lsb-release 2>/dev/null| grep DISTRIB_ID | cut -d'=' -f2 | tr '[:upper:]' '[:lower:]'`
if [[ "x$OS" != "xubuntu" ]]; then
	echo "ERROR: Unsupported OS"
	exit 1
fi

# Build Options
BUILD_OPTIONS="-DCMAKE_BUILD_TYPE=Release -DLOW_MEMORY_NODE=ON -DCLEAR_VOTES=ON"

# Test Physical Memory
PHYMEM=$(free -g|awk '/^Mem:/{print $2}')
if (( PHYMEM < 14 )); then
	echo "WARN: You have Physical Memory < 16Gb, will build LOW_MEMOTY_NODE"
	BUILD_OPTIONS="$BUILD_OPTIONS -DLOW_MEMORY_NODE=ON -DCLEAR_VOTES=ON"
elif (( PHYMEM < 2 )); then
	echo "ERROR: You have no enough Physical Memory (min: 2Gb)"
	exit 1
fi

# Get number of processors
CPUNUM=$(getconf _NPROCESSORS_ONLN)

BASEDIR=`mktemp -d`
pushd $BASEDIR

# Unpack contribute files
base64 -d <<CONTRIBEOF | tar xz
##CONTRIBBASE64##
CONTRIBEOF

##################################
# Preparing System
##################################

# Update packages list
apt-get update || :

# Upgrade system
apt-get -y upgrade

# Install Build Requirements
apt-get -y install git cmake g++ python-dev autotools-dev libicu-dev build-essential libbz2-dev libboost-all-dev libssl-dev libncurses5-dev doxygen libreadline-dev dh-autoreconf 

# Install Packaging Requirements
apt-get -y install build-essential

##################################
# Building Golosnode
##################################

# Create folder for installing node
DEB_PATH=$BASEDIR/package/golos
GOLOS_PATH=$BASEDIR/package/golos/opt/golos
mkdir -p $DEB_PATH
mkdir -p $GOLOS_PATH

# Clone Golos
git clone https://github.com/GolosChain/golos
cd golos
git checkout master
git submodule update --init --recursive

# Build
cmake $BUILD_OPTIONS .
make -j$CPUNUM

# Preparing golosnode package
install -m 0755 programs/golosd/golosd $GOLOS_PATH/
install -m 0644 programs/golosd/snapshot5392323.json $GOLOS_PATH
install -m 0755 programs/cli_wallet/cli_wallet $GOLOS_PATH
cd ..

# Copying contrib files to package
mkdir $GOLOS_PATH/witness_node_data_dir
cp $BASEDIR/contrib/config.ini $GOLOS_PATH/witness_node_data_dir/config.ini
mkdir $DEB_PATH/lib/systemd/system
cp $BASEDIR/contrib/golosnode.service $DEB_PATH/lib/systemd/system/
cp -r $BASEDIR/contrib/debian $DEB_PATH/DEBIAN

# Fixing package version
GOLOS_VERSION=$(cat $BASEDIR/golos/libraries/chain/include/steemit/chain/config.hpp | grep -m 1 STEEMIT_BLOCKCHAIN_VERSION | grep -oP '(\d+(, )?){3}' | sed 's/, /./g')
UNIXTIME=$(date +%s)
sed -i "s/##GOLOS_VERSION##/$GOLOS_VERSION/" $DEB_PATH/DEBIAN/control
sed -i "s/##UNIXTIME##/$UNIXTIME/" $DEB_PATH/DEBIAN/control

# Make deb package
fakeroot dpkg-deb --build $DEB_PATH

popd # basedir


##################################
# Clean Up
##################################
rm -rf $BASEDIR/golos
rm -rf $BASEDIR/golosnode
rmdir $BASEDIR

